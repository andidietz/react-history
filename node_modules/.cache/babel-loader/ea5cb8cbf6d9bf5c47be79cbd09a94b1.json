{"ast":null,"code":"var _jsxFileName = \"/home/andidietz/springboard/exercises/unit_41-react_router_intro/react_history/src/ClassJokeList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./ClassJoke\";\nimport \"./JokeList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass JokeList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jokes: []\n    };\n    this.generateNewJokes = this.generateNewJokes.bind(this);\n    this.vote = this.vote.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.jokes.length < this.props.numJokesToGet) {\n      this.retrieveJokes();\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.state.jokes.length < this.props.numJokesToGet) {\n      this.retrieveJokes();\n    }\n  }\n\n  async retrieveJokes() {\n    try {\n      let jokes = this.state.jokes;\n      let seenJokes = new Set();\n\n      while (jokes.length < this.props.numJokesToGet) {\n        let res = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: {\n            Accept: \"application/json\"\n          }\n        });\n        const {\n          status,\n          ...joke\n        } = res.data;\n        const {\n          id\n        } = joke;\n\n        if (!seenJokes.has(id)) {\n          seenJokes.add(id);\n          jokes.push({ ...joke,\n            votes: jokeVotes[id]\n          });\n        } else {\n          console.error(\"duplicate found!\");\n        }\n      }\n\n      this.setJokes({\n        jokes\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  generateNewJokes() {\n    this.setState(state => ({\n      jokes: state.jokes.map(joke => ({ ...joke,\n        votes: 0\n      }))\n    }));\n  }\n\n  vote(id, delta) {\n    const mappedJokes = state => ({\n      jokes: state.jokes.map(joke => joke.id === id ? { ...joke,\n        votes: joke.votes + delta\n      } : joke)\n    });\n\n    this.setState(mappedJokes);\n  }\n\n  render() {\n    let sortedJokes = [...this.state.jokes].sort((a, b) => b.votes - a.votes);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"JokeList-getmore\",\n        onClick: this.generateNewJokes,\n        children: \"Get New Jokes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), sortedJokes.map(joke => /*#__PURE__*/_jsxDEV(Joke, {\n        text: joke.joke,\n        id: joke.id,\n        votes: joke.votes,\n        vote: this.vote\n      }, joke.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nJokeList.defaultProps = {\n  numJokesToGet: 10\n};\nexport default JokeList;","map":{"version":3,"sources":["/home/andidietz/springboard/exercises/unit_41-react_router_intro/react_history/src/ClassJokeList.js"],"names":["React","useState","useEffect","axios","Joke","JokeList","Component","constructor","props","state","jokes","generateNewJokes","bind","vote","componentDidMount","length","numJokesToGet","retrieveJokes","componentDidUpdate","seenJokes","Set","res","get","headers","Accept","status","joke","data","id","has","add","push","votes","jokeVotes","console","error","setJokes","log","setState","map","delta","mappedJokes","render","sortedJokes","sort","a","b","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./ClassJoke\";\nimport \"./JokeList.css\";\n\nclass JokeList extends React.Component {\n  static defaultProps = {\n    numJokesToGet: 10\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {jokes: []}\n\n    this.generateNewJokes = this.generateNewJokes.bind(this)\n    this.vote = this.vote.bind(this)\n  }\n\n  componentDidMount() {\n    if (this.state.jokes.length < this.props.numJokesToGet) {\n      this.retrieveJokes()\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.state.jokes.length < this.props.numJokesToGet) {\n      this.retrieveJokes()\n    }\n  }\n\n  async retrieveJokes() {\n    try {\n      let jokes = this.state.jokes\n      let seenJokes = new Set()\n\n      while (jokes.length < this.props.numJokesToGet) {\n        let res = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: { Accept: \"application/json\" }\n        });\n\n        const { status, ...joke } = res.data;\n        const {id} = joke\n\n        if (!seenJokes.has(id)) {\n          seenJokes.add(id);\n          jokes.push({...joke, votes: jokeVotes[id] });\n        } else {\n          console.error(\"duplicate found!\");\n        }\n      }\n\n      this.setJokes({jokes});\n    } catch(error) {\n      console.log(error)\n    }\n  }\n\n  generateNewJokes() {\n    this.setState(state => ({\n      jokes: state.jokes.map(joke => (\n        {...joke, votes: 0}\n      ))\n    }))\n  }\n\n  vote(id, delta) {\n    const mappedJokes = state => ({\n      jokes: state.jokes.map(joke =>\n        joke.id ===id ? {...joke, votes: joke.votes + delta} \n          : joke)\n    })\n\n    this.setState(mappedJokes)\n  }\n\n  render() {\n    let sortedJokes = [...this.state.jokes].sort((a, b) => b.votes - a.votes);\n    \n    return (\n      <div>\n        <button className=\"JokeList-getmore\" onClick={this.generateNewJokes}>\n        Get New Jokes\n        </button>\n\n        {sortedJokes.map(joke => (         \n          <Joke \n            text={joke.joke} \n            key={joke.id}\n            id={joke.id}\n            votes={joke.votes}\n            vote={this.vote}\n          />\n        ))}\n      </div>\n    )\n  }\n}\n\nexport default JokeList"]},"metadata":{},"sourceType":"module"}